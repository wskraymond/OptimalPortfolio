// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ErrorMessage.proto

#include "ErrorMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace protobuf {
class ErrorMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ErrorMessage> _instance;
} _ErrorMessage_default_instance_;
}  // namespace protobuf
static void InitDefaultsscc_info_ErrorMessage_ErrorMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf::_ErrorMessage_default_instance_;
    new (ptr) ::protobuf::ErrorMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf::ErrorMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorMessage_ErrorMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ErrorMessage_ErrorMessage_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ErrorMessage_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ErrorMessage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ErrorMessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ErrorMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::protobuf::ErrorMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ErrorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf::ErrorMessage, id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ErrorMessage, errortime_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ErrorMessage, errorcode_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ErrorMessage, errormsg_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ErrorMessage, advancedorderrejectjson_),
  3,
  2,
  4,
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::protobuf::ErrorMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::_ErrorMessage_default_instance_),
};

const char descriptor_table_protodef_ErrorMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022ErrorMessage.proto\022\010protobuf\"\330\001\n\014Error"
  "Message\022\017\n\002id\030\001 \001(\005H\000\210\001\001\022\026\n\terrorTime\030\002 "
  "\001(\003H\001\210\001\001\022\026\n\terrorCode\030\003 \001(\005H\002\210\001\001\022\025\n\010erro"
  "rMsg\030\004 \001(\tH\003\210\001\001\022$\n\027advancedOrderRejectJs"
  "on\030\005 \001(\tH\004\210\001\001B\005\n\003_idB\014\n\n_errorTimeB\014\n\n_e"
  "rrorCodeB\013\n\t_errorMsgB\032\n\030_advancedOrderR"
  "ejectJsonB<\n\026com.ib.client.protobufB\021Err"
  "orMessageProto\252\002\016IBApi.protobufb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ErrorMessage_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ErrorMessage_2eproto_sccs[1] = {
  &scc_info_ErrorMessage_ErrorMessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ErrorMessage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ErrorMessage_2eproto = {
  false, false, descriptor_table_protodef_ErrorMessage_2eproto, "ErrorMessage.proto", 319,
  &descriptor_table_ErrorMessage_2eproto_once, descriptor_table_ErrorMessage_2eproto_sccs, descriptor_table_ErrorMessage_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_ErrorMessage_2eproto::offsets,
  file_level_metadata_ErrorMessage_2eproto, 1, file_level_enum_descriptors_ErrorMessage_2eproto, file_level_service_descriptors_ErrorMessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ErrorMessage_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ErrorMessage_2eproto)), true);
namespace protobuf {

// ===================================================================

void ErrorMessage::InitAsDefaultInstance() {
}
class ErrorMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<ErrorMessage>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_errortime(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_errorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_errormsg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_advancedorderrejectjson(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ErrorMessage::ErrorMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.ErrorMessage)
}
ErrorMessage::ErrorMessage(const ErrorMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errormsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_errormsg()) {
    errormsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_errormsg(),
      GetArena());
  }
  advancedorderrejectjson_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_advancedorderrejectjson()) {
    advancedorderrejectjson_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_advancedorderrejectjson(),
      GetArena());
  }
  ::memcpy(&errortime_, &from.errortime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&errortime_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:protobuf.ErrorMessage)
}

void ErrorMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ErrorMessage_ErrorMessage_2eproto.base);
  errormsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  advancedorderrejectjson_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&errortime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&errortime_)) + sizeof(errorcode_));
}

ErrorMessage::~ErrorMessage() {
  // @@protoc_insertion_point(destructor:protobuf.ErrorMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ErrorMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  errormsg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  advancedorderrejectjson_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ErrorMessage::ArenaDtor(void* object) {
  ErrorMessage* _this = reinterpret_cast< ErrorMessage* >(object);
  (void)_this;
}
void ErrorMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ErrorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ErrorMessage& ErrorMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ErrorMessage_ErrorMessage_2eproto.base);
  return *internal_default_instance();
}


void ErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ErrorMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      errormsg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      advancedorderrejectjson_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&errortime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&errorcode_) -
        reinterpret_cast<char*>(&errortime_)) + sizeof(errorcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 errorTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_errortime(&has_bits);
          errortime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 errorCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_errorcode(&has_bits);
          errorcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string errorMsg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_errormsg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf.ErrorMessage.errorMsg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string advancedOrderRejectJson = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_advancedorderrejectjson();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf.ErrorMessage.advancedOrderRejectJson"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ErrorMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ErrorMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (_internal_has_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int64 errorTime = 2;
  if (_internal_has_errortime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_errortime(), target);
  }

  // int32 errorCode = 3;
  if (_internal_has_errorcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_errorcode(), target);
  }

  // string errorMsg = 4;
  if (_internal_has_errormsg()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errormsg().data(), static_cast<int>(this->_internal_errormsg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protobuf.ErrorMessage.errorMsg");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_errormsg(), target);
  }

  // string advancedOrderRejectJson = 5;
  if (_internal_has_advancedorderrejectjson()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_advancedorderrejectjson().data(), static_cast<int>(this->_internal_advancedorderrejectjson().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protobuf.ErrorMessage.advancedOrderRejectJson");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_advancedorderrejectjson(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ErrorMessage)
  return target;
}

size_t ErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.ErrorMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // string errorMsg = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_errormsg());
    }

    // string advancedOrderRejectJson = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_advancedorderrejectjson());
    }

    // int64 errorTime = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_errortime());
    }

    // int32 id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_id());
    }

    // int32 errorCode = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_errorcode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ErrorMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.ErrorMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.ErrorMessage)
    MergeFrom(*source);
  }
}

void ErrorMessage::MergeFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_errormsg(from._internal_errormsg());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_advancedorderrejectjson(from._internal_advancedorderrejectjson());
    }
    if (cached_has_bits & 0x00000004u) {
      errortime_ = from.errortime_;
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ErrorMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorMessage::CopyFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorMessage::IsInitialized() const {
  return true;
}

void ErrorMessage::InternalSwap(ErrorMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errormsg_.Swap(&other->errormsg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  advancedorderrejectjson_.Swap(&other->advancedorderrejectjson_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ErrorMessage, errorcode_)
      + sizeof(ErrorMessage::errorcode_)
      - PROTOBUF_FIELD_OFFSET(ErrorMessage, errortime_)>(
          reinterpret_cast<char*>(&errortime_),
          reinterpret_cast<char*>(&other->errortime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf::ErrorMessage* Arena::CreateMaybeMessage< ::protobuf::ErrorMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::ErrorMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

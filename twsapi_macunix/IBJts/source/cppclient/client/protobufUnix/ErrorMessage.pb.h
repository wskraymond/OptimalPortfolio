// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ErrorMessage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ErrorMessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ErrorMessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ErrorMessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ErrorMessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ErrorMessage_2eproto;
namespace protobuf {
class ErrorMessage;
class ErrorMessageDefaultTypeInternal;
extern ErrorMessageDefaultTypeInternal _ErrorMessage_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::ErrorMessage* Arena::CreateMaybeMessage<::protobuf::ErrorMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class ErrorMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.ErrorMessage) */ {
 public:
  inline ErrorMessage() : ErrorMessage(nullptr) {};
  virtual ~ErrorMessage();

  ErrorMessage(const ErrorMessage& from);
  ErrorMessage(ErrorMessage&& from) noexcept
    : ErrorMessage() {
    *this = ::std::move(from);
  }

  inline ErrorMessage& operator=(const ErrorMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ErrorMessage& operator=(ErrorMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ErrorMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorMessage* internal_default_instance() {
    return reinterpret_cast<const ErrorMessage*>(
               &_ErrorMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ErrorMessage& a, ErrorMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ErrorMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ErrorMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ErrorMessage* New() const final {
    return CreateMaybeMessage<ErrorMessage>(nullptr);
  }

  ErrorMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ErrorMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ErrorMessage& from);
  void MergeFrom(const ErrorMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.ErrorMessage";
  }
  protected:
  explicit ErrorMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ErrorMessage_2eproto);
    return ::descriptor_table_ErrorMessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorMsgFieldNumber = 4,
    kAdvancedOrderRejectJsonFieldNumber = 5,
    kErrorTimeFieldNumber = 2,
    kIdFieldNumber = 1,
    kErrorCodeFieldNumber = 3,
  };
  // string errorMsg = 4;
  bool has_errormsg() const;
  private:
  bool _internal_has_errormsg() const;
  public:
  void clear_errormsg();
  const std::string& errormsg() const;
  void set_errormsg(const std::string& value);
  void set_errormsg(std::string&& value);
  void set_errormsg(const char* value);
  void set_errormsg(const char* value, size_t size);
  std::string* mutable_errormsg();
  std::string* release_errormsg();
  void set_allocated_errormsg(std::string* errormsg);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_errormsg();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_errormsg(
      std::string* errormsg);
  private:
  const std::string& _internal_errormsg() const;
  void _internal_set_errormsg(const std::string& value);
  std::string* _internal_mutable_errormsg();
  public:

  // string advancedOrderRejectJson = 5;
  bool has_advancedorderrejectjson() const;
  private:
  bool _internal_has_advancedorderrejectjson() const;
  public:
  void clear_advancedorderrejectjson();
  const std::string& advancedorderrejectjson() const;
  void set_advancedorderrejectjson(const std::string& value);
  void set_advancedorderrejectjson(std::string&& value);
  void set_advancedorderrejectjson(const char* value);
  void set_advancedorderrejectjson(const char* value, size_t size);
  std::string* mutable_advancedorderrejectjson();
  std::string* release_advancedorderrejectjson();
  void set_allocated_advancedorderrejectjson(std::string* advancedorderrejectjson);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_advancedorderrejectjson();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_advancedorderrejectjson(
      std::string* advancedorderrejectjson);
  private:
  const std::string& _internal_advancedorderrejectjson() const;
  void _internal_set_advancedorderrejectjson(const std::string& value);
  std::string* _internal_mutable_advancedorderrejectjson();
  public:

  // int64 errorTime = 2;
  bool has_errortime() const;
  private:
  bool _internal_has_errortime() const;
  public:
  void clear_errortime();
  ::PROTOBUF_NAMESPACE_ID::int64 errortime() const;
  void set_errortime(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_errortime() const;
  void _internal_set_errortime(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 errorCode = 3;
  bool has_errorcode() const;
  private:
  bool _internal_has_errorcode() const;
  public:
  void clear_errorcode();
  ::PROTOBUF_NAMESPACE_ID::int32 errorcode() const;
  void set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_errorcode() const;
  void _internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.ErrorMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr errormsg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr advancedorderrejectjson_;
  ::PROTOBUF_NAMESPACE_ID::int64 errortime_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 errorcode_;
  friend struct ::TableStruct_ErrorMessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ErrorMessage

// int32 id = 1;
inline bool ErrorMessage::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ErrorMessage::has_id() const {
  return _internal_has_id();
}
inline void ErrorMessage::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ErrorMessage::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ErrorMessage::id() const {
  // @@protoc_insertion_point(field_get:protobuf.ErrorMessage.id)
  return _internal_id();
}
inline void ErrorMessage::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  id_ = value;
}
inline void ErrorMessage::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf.ErrorMessage.id)
}

// int64 errorTime = 2;
inline bool ErrorMessage::_internal_has_errortime() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ErrorMessage::has_errortime() const {
  return _internal_has_errortime();
}
inline void ErrorMessage::clear_errortime() {
  errortime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ErrorMessage::_internal_errortime() const {
  return errortime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ErrorMessage::errortime() const {
  // @@protoc_insertion_point(field_get:protobuf.ErrorMessage.errorTime)
  return _internal_errortime();
}
inline void ErrorMessage::_internal_set_errortime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  errortime_ = value;
}
inline void ErrorMessage::set_errortime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_errortime(value);
  // @@protoc_insertion_point(field_set:protobuf.ErrorMessage.errorTime)
}

// int32 errorCode = 3;
inline bool ErrorMessage::_internal_has_errorcode() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ErrorMessage::has_errorcode() const {
  return _internal_has_errorcode();
}
inline void ErrorMessage::clear_errorcode() {
  errorcode_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ErrorMessage::_internal_errorcode() const {
  return errorcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ErrorMessage::errorcode() const {
  // @@protoc_insertion_point(field_get:protobuf.ErrorMessage.errorCode)
  return _internal_errorcode();
}
inline void ErrorMessage::_internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  errorcode_ = value;
}
inline void ErrorMessage::set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:protobuf.ErrorMessage.errorCode)
}

// string errorMsg = 4;
inline bool ErrorMessage::_internal_has_errormsg() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ErrorMessage::has_errormsg() const {
  return _internal_has_errormsg();
}
inline void ErrorMessage::clear_errormsg() {
  errormsg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ErrorMessage::errormsg() const {
  // @@protoc_insertion_point(field_get:protobuf.ErrorMessage.errorMsg)
  return _internal_errormsg();
}
inline void ErrorMessage::set_errormsg(const std::string& value) {
  _internal_set_errormsg(value);
  // @@protoc_insertion_point(field_set:protobuf.ErrorMessage.errorMsg)
}
inline std::string* ErrorMessage::mutable_errormsg() {
  // @@protoc_insertion_point(field_mutable:protobuf.ErrorMessage.errorMsg)
  return _internal_mutable_errormsg();
}
inline const std::string& ErrorMessage::_internal_errormsg() const {
  return errormsg_.Get();
}
inline void ErrorMessage::_internal_set_errormsg(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  errormsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ErrorMessage::set_errormsg(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  errormsg_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.ErrorMessage.errorMsg)
}
inline void ErrorMessage::set_errormsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  errormsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.ErrorMessage.errorMsg)
}
inline void ErrorMessage::set_errormsg(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  errormsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.ErrorMessage.errorMsg)
}
inline std::string* ErrorMessage::_internal_mutable_errormsg() {
  _has_bits_[0] |= 0x00000001u;
  return errormsg_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ErrorMessage::release_errormsg() {
  // @@protoc_insertion_point(field_release:protobuf.ErrorMessage.errorMsg)
  if (!_internal_has_errormsg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return errormsg_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ErrorMessage::set_allocated_errormsg(std::string* errormsg) {
  if (errormsg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  errormsg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), errormsg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.ErrorMessage.errorMsg)
}
inline std::string* ErrorMessage::unsafe_arena_release_errormsg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.ErrorMessage.errorMsg)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return errormsg_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ErrorMessage::unsafe_arena_set_allocated_errormsg(
    std::string* errormsg) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (errormsg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  errormsg_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      errormsg, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.ErrorMessage.errorMsg)
}

// string advancedOrderRejectJson = 5;
inline bool ErrorMessage::_internal_has_advancedorderrejectjson() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ErrorMessage::has_advancedorderrejectjson() const {
  return _internal_has_advancedorderrejectjson();
}
inline void ErrorMessage::clear_advancedorderrejectjson() {
  advancedorderrejectjson_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ErrorMessage::advancedorderrejectjson() const {
  // @@protoc_insertion_point(field_get:protobuf.ErrorMessage.advancedOrderRejectJson)
  return _internal_advancedorderrejectjson();
}
inline void ErrorMessage::set_advancedorderrejectjson(const std::string& value) {
  _internal_set_advancedorderrejectjson(value);
  // @@protoc_insertion_point(field_set:protobuf.ErrorMessage.advancedOrderRejectJson)
}
inline std::string* ErrorMessage::mutable_advancedorderrejectjson() {
  // @@protoc_insertion_point(field_mutable:protobuf.ErrorMessage.advancedOrderRejectJson)
  return _internal_mutable_advancedorderrejectjson();
}
inline const std::string& ErrorMessage::_internal_advancedorderrejectjson() const {
  return advancedorderrejectjson_.Get();
}
inline void ErrorMessage::_internal_set_advancedorderrejectjson(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  advancedorderrejectjson_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ErrorMessage::set_advancedorderrejectjson(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  advancedorderrejectjson_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.ErrorMessage.advancedOrderRejectJson)
}
inline void ErrorMessage::set_advancedorderrejectjson(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  advancedorderrejectjson_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.ErrorMessage.advancedOrderRejectJson)
}
inline void ErrorMessage::set_advancedorderrejectjson(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  advancedorderrejectjson_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.ErrorMessage.advancedOrderRejectJson)
}
inline std::string* ErrorMessage::_internal_mutable_advancedorderrejectjson() {
  _has_bits_[0] |= 0x00000002u;
  return advancedorderrejectjson_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ErrorMessage::release_advancedorderrejectjson() {
  // @@protoc_insertion_point(field_release:protobuf.ErrorMessage.advancedOrderRejectJson)
  if (!_internal_has_advancedorderrejectjson()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return advancedorderrejectjson_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ErrorMessage::set_allocated_advancedorderrejectjson(std::string* advancedorderrejectjson) {
  if (advancedorderrejectjson != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  advancedorderrejectjson_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), advancedorderrejectjson,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.ErrorMessage.advancedOrderRejectJson)
}
inline std::string* ErrorMessage::unsafe_arena_release_advancedorderrejectjson() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.ErrorMessage.advancedOrderRejectJson)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return advancedorderrejectjson_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ErrorMessage::unsafe_arena_set_allocated_advancedorderrejectjson(
    std::string* advancedorderrejectjson) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (advancedorderrejectjson != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  advancedorderrejectjson_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      advancedorderrejectjson, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.ErrorMessage.advancedOrderRejectJson)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ErrorMessage_2eproto

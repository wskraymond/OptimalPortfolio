// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExecutionDetails.proto

#include "ExecutionDetails.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Contract_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Contract_Contract_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Execution_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Execution_Execution_2eproto;
namespace protobuf {
class ExecutionDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecutionDetails> _instance;
} _ExecutionDetails_default_instance_;
}  // namespace protobuf
static void InitDefaultsscc_info_ExecutionDetails_ExecutionDetails_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf::_ExecutionDetails_default_instance_;
    new (ptr) ::protobuf::ExecutionDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf::ExecutionDetails::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ExecutionDetails_ExecutionDetails_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ExecutionDetails_ExecutionDetails_2eproto}, {
      &scc_info_Contract_Contract_2eproto.base,
      &scc_info_Execution_Execution_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ExecutionDetails_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ExecutionDetails_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ExecutionDetails_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ExecutionDetails_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionDetails, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionDetails, reqid_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionDetails, contract_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionDetails, execution_),
  2,
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::protobuf::ExecutionDetails)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::_ExecutionDetails_default_instance_),
};

const char descriptor_table_protodef_ExecutionDetails_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026ExecutionDetails.proto\022\010protobuf\032\016Cont"
  "ract.proto\032\017Execution.proto\"\243\001\n\020Executio"
  "nDetails\022\022\n\005reqId\030\001 \001(\005H\000\210\001\001\022)\n\010contract"
  "\030\002 \001(\0132\022.protobuf.ContractH\001\210\001\001\022+\n\texecu"
  "tion\030\003 \001(\0132\023.protobuf.ExecutionH\002\210\001\001B\010\n\006"
  "_reqIdB\013\n\t_contractB\014\n\n_executionB/\n\026com"
  ".ib.client.protobufB\025ExecutionDetailsPro"
  "tob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ExecutionDetails_2eproto_deps[2] = {
  &::descriptor_table_Contract_2eproto,
  &::descriptor_table_Execution_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ExecutionDetails_2eproto_sccs[1] = {
  &scc_info_ExecutionDetails_ExecutionDetails_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ExecutionDetails_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ExecutionDetails_2eproto = {
  false, false, descriptor_table_protodef_ExecutionDetails_2eproto, "ExecutionDetails.proto", 290,
  &descriptor_table_ExecutionDetails_2eproto_once, descriptor_table_ExecutionDetails_2eproto_sccs, descriptor_table_ExecutionDetails_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_ExecutionDetails_2eproto::offsets,
  file_level_metadata_ExecutionDetails_2eproto, 1, file_level_enum_descriptors_ExecutionDetails_2eproto, file_level_service_descriptors_ExecutionDetails_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ExecutionDetails_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ExecutionDetails_2eproto)), true);
namespace protobuf {

// ===================================================================

void ExecutionDetails::InitAsDefaultInstance() {
  ::protobuf::_ExecutionDetails_default_instance_._instance.get_mutable()->contract_ = const_cast< ::protobuf::Contract*>(
      ::protobuf::Contract::internal_default_instance());
  ::protobuf::_ExecutionDetails_default_instance_._instance.get_mutable()->execution_ = const_cast< ::protobuf::Execution*>(
      ::protobuf::Execution::internal_default_instance());
}
class ExecutionDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<ExecutionDetails>()._has_bits_);
  static void set_has_reqid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::protobuf::Contract& contract(const ExecutionDetails* msg);
  static void set_has_contract(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf::Execution& execution(const ExecutionDetails* msg);
  static void set_has_execution(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf::Contract&
ExecutionDetails::_Internal::contract(const ExecutionDetails* msg) {
  return *msg->contract_;
}
const ::protobuf::Execution&
ExecutionDetails::_Internal::execution(const ExecutionDetails* msg) {
  return *msg->execution_;
}
void ExecutionDetails::clear_contract() {
  if (GetArena() == nullptr && contract_ != nullptr) {
    delete contract_;
  }
  contract_ = nullptr;
  _has_bits_[0] &= ~0x00000001u;
}
void ExecutionDetails::clear_execution() {
  if (GetArena() == nullptr && execution_ != nullptr) {
    delete execution_;
  }
  execution_ = nullptr;
  _has_bits_[0] &= ~0x00000002u;
}
ExecutionDetails::ExecutionDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.ExecutionDetails)
}
ExecutionDetails::ExecutionDetails(const ExecutionDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_contract()) {
    contract_ = new ::protobuf::Contract(*from.contract_);
  } else {
    contract_ = nullptr;
  }
  if (from._internal_has_execution()) {
    execution_ = new ::protobuf::Execution(*from.execution_);
  } else {
    execution_ = nullptr;
  }
  reqid_ = from.reqid_;
  // @@protoc_insertion_point(copy_constructor:protobuf.ExecutionDetails)
}

void ExecutionDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExecutionDetails_ExecutionDetails_2eproto.base);
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqid_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(reqid_));
}

ExecutionDetails::~ExecutionDetails() {
  // @@protoc_insertion_point(destructor:protobuf.ExecutionDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecutionDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete contract_;
  if (this != internal_default_instance()) delete execution_;
}

void ExecutionDetails::ArenaDtor(void* object) {
  ExecutionDetails* _this = reinterpret_cast< ExecutionDetails* >(object);
  (void)_this;
}
void ExecutionDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecutionDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecutionDetails& ExecutionDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecutionDetails_ExecutionDetails_2eproto.base);
  return *internal_default_instance();
}


void ExecutionDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ExecutionDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      if (GetArena() == nullptr && contract_ != nullptr) {
        delete contract_;
      }
      contract_ = nullptr;
    }
    if (cached_has_bits & 0x00000002u) {
      if (GetArena() == nullptr && execution_ != nullptr) {
        delete execution_;
      }
      execution_ = nullptr;
    }
  }
  reqid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecutionDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_reqid(&has_bits);
          reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protobuf.Contract contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contract(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protobuf.Execution execution = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecutionDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ExecutionDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (_internal_has_reqid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .protobuf.Contract contract = 2;
  if (_internal_has_contract()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::contract(this), target, stream);
  }

  // .protobuf.Execution execution = 3;
  if (_internal_has_execution()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::execution(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ExecutionDetails)
  return target;
}

size_t ExecutionDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.ExecutionDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .protobuf.Contract contract = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *contract_);
    }

    // .protobuf.Execution execution = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *execution_);
    }

    // int32 reqId = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_reqid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.ExecutionDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecutionDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.ExecutionDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.ExecutionDetails)
    MergeFrom(*source);
  }
}

void ExecutionDetails::MergeFrom(const ExecutionDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ExecutionDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_contract()->::protobuf::Contract::MergeFrom(from._internal_contract());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_execution()->::protobuf::Execution::MergeFrom(from._internal_execution());
    }
    if (cached_has_bits & 0x00000004u) {
      reqid_ = from.reqid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExecutionDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.ExecutionDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionDetails::CopyFrom(const ExecutionDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ExecutionDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionDetails::IsInitialized() const {
  return true;
}

void ExecutionDetails::InternalSwap(ExecutionDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecutionDetails, reqid_)
      + sizeof(ExecutionDetails::reqid_)
      - PROTOBUF_FIELD_OFFSET(ExecutionDetails, contract_)>(
          reinterpret_cast<char*>(&contract_),
          reinterpret_cast<char*>(&other->contract_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecutionDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf::ExecutionDetails* Arena::CreateMaybeMessage< ::protobuf::ExecutionDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::ExecutionDetails >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExecutionRequest.proto

#include "ExecutionRequest.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ExecutionFilter_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExecutionFilter_ExecutionFilter_2eproto;
namespace protobuf {
class ExecutionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecutionRequest> _instance;
} _ExecutionRequest_default_instance_;
}  // namespace protobuf
static void InitDefaultsscc_info_ExecutionRequest_ExecutionRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf::_ExecutionRequest_default_instance_;
    new (ptr) ::protobuf::ExecutionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf::ExecutionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExecutionRequest_ExecutionRequest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ExecutionRequest_ExecutionRequest_2eproto}, {
      &scc_info_ExecutionFilter_ExecutionFilter_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ExecutionRequest_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ExecutionRequest_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ExecutionRequest_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ExecutionRequest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionRequest, reqid_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionRequest, executionfilter_),
  1,
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::protobuf::ExecutionRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::_ExecutionRequest_default_instance_),
};

const char descriptor_table_protodef_ExecutionRequest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026ExecutionRequest.proto\022\010protobuf\032\025Exec"
  "utionFilter.proto\"}\n\020ExecutionRequest\022\022\n"
  "\005reqId\030\001 \001(\005H\000\210\001\001\0227\n\017executionFilter\030\002 \001"
  "(\0132\031.protobuf.ExecutionFilterH\001\210\001\001B\010\n\006_r"
  "eqIdB\022\n\020_executionFilterB/\n\026com.ib.clien"
  "t.protobufB\025ExecutionRequestProtob\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ExecutionRequest_2eproto_deps[1] = {
  &::descriptor_table_ExecutionFilter_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ExecutionRequest_2eproto_sccs[1] = {
  &scc_info_ExecutionRequest_ExecutionRequest_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ExecutionRequest_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ExecutionRequest_2eproto = {
  false, false, descriptor_table_protodef_ExecutionRequest_2eproto, "ExecutionRequest.proto", 241,
  &descriptor_table_ExecutionRequest_2eproto_once, descriptor_table_ExecutionRequest_2eproto_sccs, descriptor_table_ExecutionRequest_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_ExecutionRequest_2eproto::offsets,
  file_level_metadata_ExecutionRequest_2eproto, 1, file_level_enum_descriptors_ExecutionRequest_2eproto, file_level_service_descriptors_ExecutionRequest_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ExecutionRequest_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ExecutionRequest_2eproto)), true);
namespace protobuf {

// ===================================================================

void ExecutionRequest::InitAsDefaultInstance() {
  ::protobuf::_ExecutionRequest_default_instance_._instance.get_mutable()->executionfilter_ = const_cast< ::protobuf::ExecutionFilter*>(
      ::protobuf::ExecutionFilter::internal_default_instance());
}
class ExecutionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ExecutionRequest>()._has_bits_);
  static void set_has_reqid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf::ExecutionFilter& executionfilter(const ExecutionRequest* msg);
  static void set_has_executionfilter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf::ExecutionFilter&
ExecutionRequest::_Internal::executionfilter(const ExecutionRequest* msg) {
  return *msg->executionfilter_;
}
void ExecutionRequest::clear_executionfilter() {
  if (GetArena() == nullptr && executionfilter_ != nullptr) {
    delete executionfilter_;
  }
  executionfilter_ = nullptr;
  _has_bits_[0] &= ~0x00000001u;
}
ExecutionRequest::ExecutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.ExecutionRequest)
}
ExecutionRequest::ExecutionRequest(const ExecutionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_executionfilter()) {
    executionfilter_ = new ::protobuf::ExecutionFilter(*from.executionfilter_);
  } else {
    executionfilter_ = nullptr;
  }
  reqid_ = from.reqid_;
  // @@protoc_insertion_point(copy_constructor:protobuf.ExecutionRequest)
}

void ExecutionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExecutionRequest_ExecutionRequest_2eproto.base);
  ::memset(&executionfilter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqid_) -
      reinterpret_cast<char*>(&executionfilter_)) + sizeof(reqid_));
}

ExecutionRequest::~ExecutionRequest() {
  // @@protoc_insertion_point(destructor:protobuf.ExecutionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecutionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete executionfilter_;
}

void ExecutionRequest::ArenaDtor(void* object) {
  ExecutionRequest* _this = reinterpret_cast< ExecutionRequest* >(object);
  (void)_this;
}
void ExecutionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecutionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecutionRequest& ExecutionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecutionRequest_ExecutionRequest_2eproto.base);
  return *internal_default_instance();
}


void ExecutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ExecutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    if (GetArena() == nullptr && executionfilter_ != nullptr) {
      delete executionfilter_;
    }
    executionfilter_ = nullptr;
  }
  reqid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecutionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_reqid(&has_bits);
          reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protobuf.ExecutionFilter executionFilter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_executionfilter(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecutionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ExecutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (_internal_has_reqid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .protobuf.ExecutionFilter executionFilter = 2;
  if (_internal_has_executionfilter()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::executionfilter(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ExecutionRequest)
  return target;
}

size_t ExecutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.ExecutionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .protobuf.ExecutionFilter executionFilter = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *executionfilter_);
    }

    // int32 reqId = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_reqid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.ExecutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecutionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.ExecutionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.ExecutionRequest)
    MergeFrom(*source);
  }
}

void ExecutionRequest::MergeFrom(const ExecutionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ExecutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_executionfilter()->::protobuf::ExecutionFilter::MergeFrom(from._internal_executionfilter());
    }
    if (cached_has_bits & 0x00000002u) {
      reqid_ = from.reqid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExecutionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.ExecutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionRequest::CopyFrom(const ExecutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ExecutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionRequest::IsInitialized() const {
  return true;
}

void ExecutionRequest::InternalSwap(ExecutionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecutionRequest, reqid_)
      + sizeof(ExecutionRequest::reqid_)
      - PROTOBUF_FIELD_OFFSET(ExecutionRequest, executionfilter_)>(
          reinterpret_cast<char*>(&executionfilter_),
          reinterpret_cast<char*>(&other->executionfilter_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecutionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf::ExecutionRequest* Arena::CreateMaybeMessage< ::protobuf::ExecutionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::ExecutionRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

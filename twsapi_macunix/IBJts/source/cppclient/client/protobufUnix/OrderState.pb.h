// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderState.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_OrderState_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_OrderState_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "OrderAllocation.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_OrderState_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_OrderState_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_OrderState_2eproto;
namespace protobuf {
class OrderState;
class OrderStateDefaultTypeInternal;
extern OrderStateDefaultTypeInternal _OrderState_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::OrderState* Arena::CreateMaybeMessage<::protobuf::OrderState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class OrderState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.OrderState) */ {
 public:
  inline OrderState() : OrderState(nullptr) {};
  virtual ~OrderState();

  OrderState(const OrderState& from);
  OrderState(OrderState&& from) noexcept
    : OrderState() {
    *this = ::std::move(from);
  }

  inline OrderState& operator=(const OrderState& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderState& operator=(OrderState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OrderState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderState* internal_default_instance() {
    return reinterpret_cast<const OrderState*>(
               &_OrderState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OrderState& a, OrderState& b) {
    a.Swap(&b);
  }
  inline void Swap(OrderState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OrderState* New() const final {
    return CreateMaybeMessage<OrderState>(nullptr);
  }

  OrderState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OrderState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OrderState& from);
  void MergeFrom(const OrderState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.OrderState";
  }
  protected:
  explicit OrderState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OrderState_2eproto);
    return ::descriptor_table_OrderState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderAllocationsFieldNumber = 27,
    kStatusFieldNumber = 1,
    kCommissionAndFeesCurrencyFieldNumber = 14,
    kMarginCurrencyFieldNumber = 15,
    kSuggestedSizeFieldNumber = 25,
    kRejectReasonFieldNumber = 26,
    kWarningTextFieldNumber = 28,
    kCompletedTimeFieldNumber = 29,
    kCompletedStatusFieldNumber = 30,
    kInitMarginBeforeFieldNumber = 2,
    kMaintMarginBeforeFieldNumber = 3,
    kEquityWithLoanBeforeFieldNumber = 4,
    kInitMarginChangeFieldNumber = 5,
    kMaintMarginChangeFieldNumber = 6,
    kEquityWithLoanChangeFieldNumber = 7,
    kInitMarginAfterFieldNumber = 8,
    kMaintMarginAfterFieldNumber = 9,
    kEquityWithLoanAfterFieldNumber = 10,
    kCommissionAndFeesFieldNumber = 11,
    kMinCommissionAndFeesFieldNumber = 12,
    kMaxCommissionAndFeesFieldNumber = 13,
    kInitMarginBeforeOutsideRTHFieldNumber = 16,
    kMaintMarginBeforeOutsideRTHFieldNumber = 17,
    kEquityWithLoanBeforeOutsideRTHFieldNumber = 18,
    kInitMarginChangeOutsideRTHFieldNumber = 19,
    kMaintMarginChangeOutsideRTHFieldNumber = 20,
    kEquityWithLoanChangeOutsideRTHFieldNumber = 21,
    kInitMarginAfterOutsideRTHFieldNumber = 22,
    kMaintMarginAfterOutsideRTHFieldNumber = 23,
    kEquityWithLoanAfterOutsideRTHFieldNumber = 24,
  };
  // repeated .protobuf.OrderAllocation orderAllocations = 27;
  int orderallocations_size() const;
  private:
  int _internal_orderallocations_size() const;
  public:
  void clear_orderallocations();
  ::protobuf::OrderAllocation* mutable_orderallocations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::OrderAllocation >*
      mutable_orderallocations();
  private:
  const ::protobuf::OrderAllocation& _internal_orderallocations(int index) const;
  ::protobuf::OrderAllocation* _internal_add_orderallocations();
  public:
  const ::protobuf::OrderAllocation& orderallocations(int index) const;
  ::protobuf::OrderAllocation* add_orderallocations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::OrderAllocation >&
      orderallocations() const;

  // string status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const std::string& status() const;
  void set_status(const std::string& value);
  void set_status(std::string&& value);
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  std::string* mutable_status();
  std::string* release_status();
  void set_allocated_status(std::string* status);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_status();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_status(
      std::string* status);
  private:
  const std::string& _internal_status() const;
  void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // string commissionAndFeesCurrency = 14;
  bool has_commissionandfeescurrency() const;
  private:
  bool _internal_has_commissionandfeescurrency() const;
  public:
  void clear_commissionandfeescurrency();
  const std::string& commissionandfeescurrency() const;
  void set_commissionandfeescurrency(const std::string& value);
  void set_commissionandfeescurrency(std::string&& value);
  void set_commissionandfeescurrency(const char* value);
  void set_commissionandfeescurrency(const char* value, size_t size);
  std::string* mutable_commissionandfeescurrency();
  std::string* release_commissionandfeescurrency();
  void set_allocated_commissionandfeescurrency(std::string* commissionandfeescurrency);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_commissionandfeescurrency();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_commissionandfeescurrency(
      std::string* commissionandfeescurrency);
  private:
  const std::string& _internal_commissionandfeescurrency() const;
  void _internal_set_commissionandfeescurrency(const std::string& value);
  std::string* _internal_mutable_commissionandfeescurrency();
  public:

  // string marginCurrency = 15;
  bool has_margincurrency() const;
  private:
  bool _internal_has_margincurrency() const;
  public:
  void clear_margincurrency();
  const std::string& margincurrency() const;
  void set_margincurrency(const std::string& value);
  void set_margincurrency(std::string&& value);
  void set_margincurrency(const char* value);
  void set_margincurrency(const char* value, size_t size);
  std::string* mutable_margincurrency();
  std::string* release_margincurrency();
  void set_allocated_margincurrency(std::string* margincurrency);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_margincurrency();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_margincurrency(
      std::string* margincurrency);
  private:
  const std::string& _internal_margincurrency() const;
  void _internal_set_margincurrency(const std::string& value);
  std::string* _internal_mutable_margincurrency();
  public:

  // string suggestedSize = 25;
  bool has_suggestedsize() const;
  private:
  bool _internal_has_suggestedsize() const;
  public:
  void clear_suggestedsize();
  const std::string& suggestedsize() const;
  void set_suggestedsize(const std::string& value);
  void set_suggestedsize(std::string&& value);
  void set_suggestedsize(const char* value);
  void set_suggestedsize(const char* value, size_t size);
  std::string* mutable_suggestedsize();
  std::string* release_suggestedsize();
  void set_allocated_suggestedsize(std::string* suggestedsize);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_suggestedsize();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_suggestedsize(
      std::string* suggestedsize);
  private:
  const std::string& _internal_suggestedsize() const;
  void _internal_set_suggestedsize(const std::string& value);
  std::string* _internal_mutable_suggestedsize();
  public:

  // string rejectReason = 26;
  bool has_rejectreason() const;
  private:
  bool _internal_has_rejectreason() const;
  public:
  void clear_rejectreason();
  const std::string& rejectreason() const;
  void set_rejectreason(const std::string& value);
  void set_rejectreason(std::string&& value);
  void set_rejectreason(const char* value);
  void set_rejectreason(const char* value, size_t size);
  std::string* mutable_rejectreason();
  std::string* release_rejectreason();
  void set_allocated_rejectreason(std::string* rejectreason);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_rejectreason();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_rejectreason(
      std::string* rejectreason);
  private:
  const std::string& _internal_rejectreason() const;
  void _internal_set_rejectreason(const std::string& value);
  std::string* _internal_mutable_rejectreason();
  public:

  // string warningText = 28;
  bool has_warningtext() const;
  private:
  bool _internal_has_warningtext() const;
  public:
  void clear_warningtext();
  const std::string& warningtext() const;
  void set_warningtext(const std::string& value);
  void set_warningtext(std::string&& value);
  void set_warningtext(const char* value);
  void set_warningtext(const char* value, size_t size);
  std::string* mutable_warningtext();
  std::string* release_warningtext();
  void set_allocated_warningtext(std::string* warningtext);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_warningtext();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_warningtext(
      std::string* warningtext);
  private:
  const std::string& _internal_warningtext() const;
  void _internal_set_warningtext(const std::string& value);
  std::string* _internal_mutable_warningtext();
  public:

  // string completedTime = 29;
  bool has_completedtime() const;
  private:
  bool _internal_has_completedtime() const;
  public:
  void clear_completedtime();
  const std::string& completedtime() const;
  void set_completedtime(const std::string& value);
  void set_completedtime(std::string&& value);
  void set_completedtime(const char* value);
  void set_completedtime(const char* value, size_t size);
  std::string* mutable_completedtime();
  std::string* release_completedtime();
  void set_allocated_completedtime(std::string* completedtime);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_completedtime();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_completedtime(
      std::string* completedtime);
  private:
  const std::string& _internal_completedtime() const;
  void _internal_set_completedtime(const std::string& value);
  std::string* _internal_mutable_completedtime();
  public:

  // string completedStatus = 30;
  bool has_completedstatus() const;
  private:
  bool _internal_has_completedstatus() const;
  public:
  void clear_completedstatus();
  const std::string& completedstatus() const;
  void set_completedstatus(const std::string& value);
  void set_completedstatus(std::string&& value);
  void set_completedstatus(const char* value);
  void set_completedstatus(const char* value, size_t size);
  std::string* mutable_completedstatus();
  std::string* release_completedstatus();
  void set_allocated_completedstatus(std::string* completedstatus);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_completedstatus();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_completedstatus(
      std::string* completedstatus);
  private:
  const std::string& _internal_completedstatus() const;
  void _internal_set_completedstatus(const std::string& value);
  std::string* _internal_mutable_completedstatus();
  public:

  // double initMarginBefore = 2;
  bool has_initmarginbefore() const;
  private:
  bool _internal_has_initmarginbefore() const;
  public:
  void clear_initmarginbefore();
  double initmarginbefore() const;
  void set_initmarginbefore(double value);
  private:
  double _internal_initmarginbefore() const;
  void _internal_set_initmarginbefore(double value);
  public:

  // double maintMarginBefore = 3;
  bool has_maintmarginbefore() const;
  private:
  bool _internal_has_maintmarginbefore() const;
  public:
  void clear_maintmarginbefore();
  double maintmarginbefore() const;
  void set_maintmarginbefore(double value);
  private:
  double _internal_maintmarginbefore() const;
  void _internal_set_maintmarginbefore(double value);
  public:

  // double equityWithLoanBefore = 4;
  bool has_equitywithloanbefore() const;
  private:
  bool _internal_has_equitywithloanbefore() const;
  public:
  void clear_equitywithloanbefore();
  double equitywithloanbefore() const;
  void set_equitywithloanbefore(double value);
  private:
  double _internal_equitywithloanbefore() const;
  void _internal_set_equitywithloanbefore(double value);
  public:

  // double initMarginChange = 5;
  bool has_initmarginchange() const;
  private:
  bool _internal_has_initmarginchange() const;
  public:
  void clear_initmarginchange();
  double initmarginchange() const;
  void set_initmarginchange(double value);
  private:
  double _internal_initmarginchange() const;
  void _internal_set_initmarginchange(double value);
  public:

  // double maintMarginChange = 6;
  bool has_maintmarginchange() const;
  private:
  bool _internal_has_maintmarginchange() const;
  public:
  void clear_maintmarginchange();
  double maintmarginchange() const;
  void set_maintmarginchange(double value);
  private:
  double _internal_maintmarginchange() const;
  void _internal_set_maintmarginchange(double value);
  public:

  // double equityWithLoanChange = 7;
  bool has_equitywithloanchange() const;
  private:
  bool _internal_has_equitywithloanchange() const;
  public:
  void clear_equitywithloanchange();
  double equitywithloanchange() const;
  void set_equitywithloanchange(double value);
  private:
  double _internal_equitywithloanchange() const;
  void _internal_set_equitywithloanchange(double value);
  public:

  // double initMarginAfter = 8;
  bool has_initmarginafter() const;
  private:
  bool _internal_has_initmarginafter() const;
  public:
  void clear_initmarginafter();
  double initmarginafter() const;
  void set_initmarginafter(double value);
  private:
  double _internal_initmarginafter() const;
  void _internal_set_initmarginafter(double value);
  public:

  // double maintMarginAfter = 9;
  bool has_maintmarginafter() const;
  private:
  bool _internal_has_maintmarginafter() const;
  public:
  void clear_maintmarginafter();
  double maintmarginafter() const;
  void set_maintmarginafter(double value);
  private:
  double _internal_maintmarginafter() const;
  void _internal_set_maintmarginafter(double value);
  public:

  // double equityWithLoanAfter = 10;
  bool has_equitywithloanafter() const;
  private:
  bool _internal_has_equitywithloanafter() const;
  public:
  void clear_equitywithloanafter();
  double equitywithloanafter() const;
  void set_equitywithloanafter(double value);
  private:
  double _internal_equitywithloanafter() const;
  void _internal_set_equitywithloanafter(double value);
  public:

  // double commissionAndFees = 11;
  bool has_commissionandfees() const;
  private:
  bool _internal_has_commissionandfees() const;
  public:
  void clear_commissionandfees();
  double commissionandfees() const;
  void set_commissionandfees(double value);
  private:
  double _internal_commissionandfees() const;
  void _internal_set_commissionandfees(double value);
  public:

  // double minCommissionAndFees = 12;
  bool has_mincommissionandfees() const;
  private:
  bool _internal_has_mincommissionandfees() const;
  public:
  void clear_mincommissionandfees();
  double mincommissionandfees() const;
  void set_mincommissionandfees(double value);
  private:
  double _internal_mincommissionandfees() const;
  void _internal_set_mincommissionandfees(double value);
  public:

  // double maxCommissionAndFees = 13;
  bool has_maxcommissionandfees() const;
  private:
  bool _internal_has_maxcommissionandfees() const;
  public:
  void clear_maxcommissionandfees();
  double maxcommissionandfees() const;
  void set_maxcommissionandfees(double value);
  private:
  double _internal_maxcommissionandfees() const;
  void _internal_set_maxcommissionandfees(double value);
  public:

  // double initMarginBeforeOutsideRTH = 16;
  bool has_initmarginbeforeoutsiderth() const;
  private:
  bool _internal_has_initmarginbeforeoutsiderth() const;
  public:
  void clear_initmarginbeforeoutsiderth();
  double initmarginbeforeoutsiderth() const;
  void set_initmarginbeforeoutsiderth(double value);
  private:
  double _internal_initmarginbeforeoutsiderth() const;
  void _internal_set_initmarginbeforeoutsiderth(double value);
  public:

  // double maintMarginBeforeOutsideRTH = 17;
  bool has_maintmarginbeforeoutsiderth() const;
  private:
  bool _internal_has_maintmarginbeforeoutsiderth() const;
  public:
  void clear_maintmarginbeforeoutsiderth();
  double maintmarginbeforeoutsiderth() const;
  void set_maintmarginbeforeoutsiderth(double value);
  private:
  double _internal_maintmarginbeforeoutsiderth() const;
  void _internal_set_maintmarginbeforeoutsiderth(double value);
  public:

  // double equityWithLoanBeforeOutsideRTH = 18;
  bool has_equitywithloanbeforeoutsiderth() const;
  private:
  bool _internal_has_equitywithloanbeforeoutsiderth() const;
  public:
  void clear_equitywithloanbeforeoutsiderth();
  double equitywithloanbeforeoutsiderth() const;
  void set_equitywithloanbeforeoutsiderth(double value);
  private:
  double _internal_equitywithloanbeforeoutsiderth() const;
  void _internal_set_equitywithloanbeforeoutsiderth(double value);
  public:

  // double initMarginChangeOutsideRTH = 19;
  bool has_initmarginchangeoutsiderth() const;
  private:
  bool _internal_has_initmarginchangeoutsiderth() const;
  public:
  void clear_initmarginchangeoutsiderth();
  double initmarginchangeoutsiderth() const;
  void set_initmarginchangeoutsiderth(double value);
  private:
  double _internal_initmarginchangeoutsiderth() const;
  void _internal_set_initmarginchangeoutsiderth(double value);
  public:

  // double maintMarginChangeOutsideRTH = 20;
  bool has_maintmarginchangeoutsiderth() const;
  private:
  bool _internal_has_maintmarginchangeoutsiderth() const;
  public:
  void clear_maintmarginchangeoutsiderth();
  double maintmarginchangeoutsiderth() const;
  void set_maintmarginchangeoutsiderth(double value);
  private:
  double _internal_maintmarginchangeoutsiderth() const;
  void _internal_set_maintmarginchangeoutsiderth(double value);
  public:

  // double equityWithLoanChangeOutsideRTH = 21;
  bool has_equitywithloanchangeoutsiderth() const;
  private:
  bool _internal_has_equitywithloanchangeoutsiderth() const;
  public:
  void clear_equitywithloanchangeoutsiderth();
  double equitywithloanchangeoutsiderth() const;
  void set_equitywithloanchangeoutsiderth(double value);
  private:
  double _internal_equitywithloanchangeoutsiderth() const;
  void _internal_set_equitywithloanchangeoutsiderth(double value);
  public:

  // double initMarginAfterOutsideRTH = 22;
  bool has_initmarginafteroutsiderth() const;
  private:
  bool _internal_has_initmarginafteroutsiderth() const;
  public:
  void clear_initmarginafteroutsiderth();
  double initmarginafteroutsiderth() const;
  void set_initmarginafteroutsiderth(double value);
  private:
  double _internal_initmarginafteroutsiderth() const;
  void _internal_set_initmarginafteroutsiderth(double value);
  public:

  // double maintMarginAfterOutsideRTH = 23;
  bool has_maintmarginafteroutsiderth() const;
  private:
  bool _internal_has_maintmarginafteroutsiderth() const;
  public:
  void clear_maintmarginafteroutsiderth();
  double maintmarginafteroutsiderth() const;
  void set_maintmarginafteroutsiderth(double value);
  private:
  double _internal_maintmarginafteroutsiderth() const;
  void _internal_set_maintmarginafteroutsiderth(double value);
  public:

  // double equityWithLoanAfterOutsideRTH = 24;
  bool has_equitywithloanafteroutsiderth() const;
  private:
  bool _internal_has_equitywithloanafteroutsiderth() const;
  public:
  void clear_equitywithloanafteroutsiderth();
  double equitywithloanafteroutsiderth() const;
  void set_equitywithloanafteroutsiderth(double value);
  private:
  double _internal_equitywithloanafteroutsiderth() const;
  void _internal_set_equitywithloanafteroutsiderth(double value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.OrderState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::OrderAllocation > orderallocations_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr commissionandfeescurrency_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr margincurrency_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr suggestedsize_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rejectreason_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr warningtext_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr completedtime_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr completedstatus_;
  double initmarginbefore_;
  double maintmarginbefore_;
  double equitywithloanbefore_;
  double initmarginchange_;
  double maintmarginchange_;
  double equitywithloanchange_;
  double initmarginafter_;
  double maintmarginafter_;
  double equitywithloanafter_;
  double commissionandfees_;
  double mincommissionandfees_;
  double maxcommissionandfees_;
  double initmarginbeforeoutsiderth_;
  double maintmarginbeforeoutsiderth_;
  double equitywithloanbeforeoutsiderth_;
  double initmarginchangeoutsiderth_;
  double maintmarginchangeoutsiderth_;
  double equitywithloanchangeoutsiderth_;
  double initmarginafteroutsiderth_;
  double maintmarginafteroutsiderth_;
  double equitywithloanafteroutsiderth_;
  friend struct ::TableStruct_OrderState_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OrderState

// string status = 1;
inline bool OrderState::_internal_has_status() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool OrderState::has_status() const {
  return _internal_has_status();
}
inline void OrderState::clear_status() {
  status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderState::status() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.status)
  return _internal_status();
}
inline void OrderState::set_status(const std::string& value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.status)
}
inline std::string* OrderState::mutable_status() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.status)
  return _internal_mutable_status();
}
inline const std::string& OrderState::_internal_status() const {
  return status_.Get();
}
inline void OrderState::_internal_set_status(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderState::set_status(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  status_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderState.status)
}
inline void OrderState::set_status(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderState.status)
}
inline void OrderState::set_status(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderState.status)
}
inline std::string* OrderState::_internal_mutable_status() {
  _has_bits_[0] |= 0x00000001u;
  return status_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderState::release_status() {
  // @@protoc_insertion_point(field_release:protobuf.OrderState.status)
  if (!_internal_has_status()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return status_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderState::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.status)
}
inline std::string* OrderState::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderState.status)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return status_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderState::unsafe_arena_set_allocated_status(
    std::string* status) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (status != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  status_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      status, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderState.status)
}

// double initMarginBefore = 2;
inline bool OrderState::_internal_has_initmarginbefore() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool OrderState::has_initmarginbefore() const {
  return _internal_has_initmarginbefore();
}
inline void OrderState::clear_initmarginbefore() {
  initmarginbefore_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double OrderState::_internal_initmarginbefore() const {
  return initmarginbefore_;
}
inline double OrderState::initmarginbefore() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginBefore)
  return _internal_initmarginbefore();
}
inline void OrderState::_internal_set_initmarginbefore(double value) {
  _has_bits_[0] |= 0x00000100u;
  initmarginbefore_ = value;
}
inline void OrderState::set_initmarginbefore(double value) {
  _internal_set_initmarginbefore(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginBefore)
}

// double maintMarginBefore = 3;
inline bool OrderState::_internal_has_maintmarginbefore() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool OrderState::has_maintmarginbefore() const {
  return _internal_has_maintmarginbefore();
}
inline void OrderState::clear_maintmarginbefore() {
  maintmarginbefore_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double OrderState::_internal_maintmarginbefore() const {
  return maintmarginbefore_;
}
inline double OrderState::maintmarginbefore() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginBefore)
  return _internal_maintmarginbefore();
}
inline void OrderState::_internal_set_maintmarginbefore(double value) {
  _has_bits_[0] |= 0x00000200u;
  maintmarginbefore_ = value;
}
inline void OrderState::set_maintmarginbefore(double value) {
  _internal_set_maintmarginbefore(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginBefore)
}

// double equityWithLoanBefore = 4;
inline bool OrderState::_internal_has_equitywithloanbefore() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool OrderState::has_equitywithloanbefore() const {
  return _internal_has_equitywithloanbefore();
}
inline void OrderState::clear_equitywithloanbefore() {
  equitywithloanbefore_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline double OrderState::_internal_equitywithloanbefore() const {
  return equitywithloanbefore_;
}
inline double OrderState::equitywithloanbefore() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanBefore)
  return _internal_equitywithloanbefore();
}
inline void OrderState::_internal_set_equitywithloanbefore(double value) {
  _has_bits_[0] |= 0x00000400u;
  equitywithloanbefore_ = value;
}
inline void OrderState::set_equitywithloanbefore(double value) {
  _internal_set_equitywithloanbefore(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanBefore)
}

// double initMarginChange = 5;
inline bool OrderState::_internal_has_initmarginchange() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool OrderState::has_initmarginchange() const {
  return _internal_has_initmarginchange();
}
inline void OrderState::clear_initmarginchange() {
  initmarginchange_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline double OrderState::_internal_initmarginchange() const {
  return initmarginchange_;
}
inline double OrderState::initmarginchange() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginChange)
  return _internal_initmarginchange();
}
inline void OrderState::_internal_set_initmarginchange(double value) {
  _has_bits_[0] |= 0x00000800u;
  initmarginchange_ = value;
}
inline void OrderState::set_initmarginchange(double value) {
  _internal_set_initmarginchange(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginChange)
}

// double maintMarginChange = 6;
inline bool OrderState::_internal_has_maintmarginchange() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool OrderState::has_maintmarginchange() const {
  return _internal_has_maintmarginchange();
}
inline void OrderState::clear_maintmarginchange() {
  maintmarginchange_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline double OrderState::_internal_maintmarginchange() const {
  return maintmarginchange_;
}
inline double OrderState::maintmarginchange() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginChange)
  return _internal_maintmarginchange();
}
inline void OrderState::_internal_set_maintmarginchange(double value) {
  _has_bits_[0] |= 0x00001000u;
  maintmarginchange_ = value;
}
inline void OrderState::set_maintmarginchange(double value) {
  _internal_set_maintmarginchange(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginChange)
}

// double equityWithLoanChange = 7;
inline bool OrderState::_internal_has_equitywithloanchange() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool OrderState::has_equitywithloanchange() const {
  return _internal_has_equitywithloanchange();
}
inline void OrderState::clear_equitywithloanchange() {
  equitywithloanchange_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline double OrderState::_internal_equitywithloanchange() const {
  return equitywithloanchange_;
}
inline double OrderState::equitywithloanchange() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanChange)
  return _internal_equitywithloanchange();
}
inline void OrderState::_internal_set_equitywithloanchange(double value) {
  _has_bits_[0] |= 0x00002000u;
  equitywithloanchange_ = value;
}
inline void OrderState::set_equitywithloanchange(double value) {
  _internal_set_equitywithloanchange(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanChange)
}

// double initMarginAfter = 8;
inline bool OrderState::_internal_has_initmarginafter() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool OrderState::has_initmarginafter() const {
  return _internal_has_initmarginafter();
}
inline void OrderState::clear_initmarginafter() {
  initmarginafter_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline double OrderState::_internal_initmarginafter() const {
  return initmarginafter_;
}
inline double OrderState::initmarginafter() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginAfter)
  return _internal_initmarginafter();
}
inline void OrderState::_internal_set_initmarginafter(double value) {
  _has_bits_[0] |= 0x00004000u;
  initmarginafter_ = value;
}
inline void OrderState::set_initmarginafter(double value) {
  _internal_set_initmarginafter(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginAfter)
}

// double maintMarginAfter = 9;
inline bool OrderState::_internal_has_maintmarginafter() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool OrderState::has_maintmarginafter() const {
  return _internal_has_maintmarginafter();
}
inline void OrderState::clear_maintmarginafter() {
  maintmarginafter_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline double OrderState::_internal_maintmarginafter() const {
  return maintmarginafter_;
}
inline double OrderState::maintmarginafter() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginAfter)
  return _internal_maintmarginafter();
}
inline void OrderState::_internal_set_maintmarginafter(double value) {
  _has_bits_[0] |= 0x00008000u;
  maintmarginafter_ = value;
}
inline void OrderState::set_maintmarginafter(double value) {
  _internal_set_maintmarginafter(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginAfter)
}

// double equityWithLoanAfter = 10;
inline bool OrderState::_internal_has_equitywithloanafter() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool OrderState::has_equitywithloanafter() const {
  return _internal_has_equitywithloanafter();
}
inline void OrderState::clear_equitywithloanafter() {
  equitywithloanafter_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline double OrderState::_internal_equitywithloanafter() const {
  return equitywithloanafter_;
}
inline double OrderState::equitywithloanafter() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanAfter)
  return _internal_equitywithloanafter();
}
inline void OrderState::_internal_set_equitywithloanafter(double value) {
  _has_bits_[0] |= 0x00010000u;
  equitywithloanafter_ = value;
}
inline void OrderState::set_equitywithloanafter(double value) {
  _internal_set_equitywithloanafter(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanAfter)
}

// double commissionAndFees = 11;
inline bool OrderState::_internal_has_commissionandfees() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool OrderState::has_commissionandfees() const {
  return _internal_has_commissionandfees();
}
inline void OrderState::clear_commissionandfees() {
  commissionandfees_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline double OrderState::_internal_commissionandfees() const {
  return commissionandfees_;
}
inline double OrderState::commissionandfees() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.commissionAndFees)
  return _internal_commissionandfees();
}
inline void OrderState::_internal_set_commissionandfees(double value) {
  _has_bits_[0] |= 0x00020000u;
  commissionandfees_ = value;
}
inline void OrderState::set_commissionandfees(double value) {
  _internal_set_commissionandfees(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.commissionAndFees)
}

// double minCommissionAndFees = 12;
inline bool OrderState::_internal_has_mincommissionandfees() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool OrderState::has_mincommissionandfees() const {
  return _internal_has_mincommissionandfees();
}
inline void OrderState::clear_mincommissionandfees() {
  mincommissionandfees_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline double OrderState::_internal_mincommissionandfees() const {
  return mincommissionandfees_;
}
inline double OrderState::mincommissionandfees() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.minCommissionAndFees)
  return _internal_mincommissionandfees();
}
inline void OrderState::_internal_set_mincommissionandfees(double value) {
  _has_bits_[0] |= 0x00040000u;
  mincommissionandfees_ = value;
}
inline void OrderState::set_mincommissionandfees(double value) {
  _internal_set_mincommissionandfees(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.minCommissionAndFees)
}

// double maxCommissionAndFees = 13;
inline bool OrderState::_internal_has_maxcommissionandfees() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool OrderState::has_maxcommissionandfees() const {
  return _internal_has_maxcommissionandfees();
}
inline void OrderState::clear_maxcommissionandfees() {
  maxcommissionandfees_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline double OrderState::_internal_maxcommissionandfees() const {
  return maxcommissionandfees_;
}
inline double OrderState::maxcommissionandfees() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maxCommissionAndFees)
  return _internal_maxcommissionandfees();
}
inline void OrderState::_internal_set_maxcommissionandfees(double value) {
  _has_bits_[0] |= 0x00080000u;
  maxcommissionandfees_ = value;
}
inline void OrderState::set_maxcommissionandfees(double value) {
  _internal_set_maxcommissionandfees(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maxCommissionAndFees)
}

// string commissionAndFeesCurrency = 14;
inline bool OrderState::_internal_has_commissionandfeescurrency() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool OrderState::has_commissionandfeescurrency() const {
  return _internal_has_commissionandfeescurrency();
}
inline void OrderState::clear_commissionandfeescurrency() {
  commissionandfeescurrency_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrderState::commissionandfeescurrency() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.commissionAndFeesCurrency)
  return _internal_commissionandfeescurrency();
}
inline void OrderState::set_commissionandfeescurrency(const std::string& value) {
  _internal_set_commissionandfeescurrency(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.commissionAndFeesCurrency)
}
inline std::string* OrderState::mutable_commissionandfeescurrency() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.commissionAndFeesCurrency)
  return _internal_mutable_commissionandfeescurrency();
}
inline const std::string& OrderState::_internal_commissionandfeescurrency() const {
  return commissionandfeescurrency_.Get();
}
inline void OrderState::_internal_set_commissionandfeescurrency(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  commissionandfeescurrency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderState::set_commissionandfeescurrency(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  commissionandfeescurrency_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderState.commissionAndFeesCurrency)
}
inline void OrderState::set_commissionandfeescurrency(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  commissionandfeescurrency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderState.commissionAndFeesCurrency)
}
inline void OrderState::set_commissionandfeescurrency(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  commissionandfeescurrency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderState.commissionAndFeesCurrency)
}
inline std::string* OrderState::_internal_mutable_commissionandfeescurrency() {
  _has_bits_[0] |= 0x00000002u;
  return commissionandfeescurrency_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderState::release_commissionandfeescurrency() {
  // @@protoc_insertion_point(field_release:protobuf.OrderState.commissionAndFeesCurrency)
  if (!_internal_has_commissionandfeescurrency()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return commissionandfeescurrency_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderState::set_allocated_commissionandfeescurrency(std::string* commissionandfeescurrency) {
  if (commissionandfeescurrency != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  commissionandfeescurrency_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), commissionandfeescurrency,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.commissionAndFeesCurrency)
}
inline std::string* OrderState::unsafe_arena_release_commissionandfeescurrency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderState.commissionAndFeesCurrency)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return commissionandfeescurrency_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderState::unsafe_arena_set_allocated_commissionandfeescurrency(
    std::string* commissionandfeescurrency) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (commissionandfeescurrency != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  commissionandfeescurrency_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      commissionandfeescurrency, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderState.commissionAndFeesCurrency)
}

// string marginCurrency = 15;
inline bool OrderState::_internal_has_margincurrency() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool OrderState::has_margincurrency() const {
  return _internal_has_margincurrency();
}
inline void OrderState::clear_margincurrency() {
  margincurrency_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& OrderState::margincurrency() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.marginCurrency)
  return _internal_margincurrency();
}
inline void OrderState::set_margincurrency(const std::string& value) {
  _internal_set_margincurrency(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.marginCurrency)
}
inline std::string* OrderState::mutable_margincurrency() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.marginCurrency)
  return _internal_mutable_margincurrency();
}
inline const std::string& OrderState::_internal_margincurrency() const {
  return margincurrency_.Get();
}
inline void OrderState::_internal_set_margincurrency(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  margincurrency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderState::set_margincurrency(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  margincurrency_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderState.marginCurrency)
}
inline void OrderState::set_margincurrency(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  margincurrency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderState.marginCurrency)
}
inline void OrderState::set_margincurrency(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  margincurrency_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderState.marginCurrency)
}
inline std::string* OrderState::_internal_mutable_margincurrency() {
  _has_bits_[0] |= 0x00000004u;
  return margincurrency_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderState::release_margincurrency() {
  // @@protoc_insertion_point(field_release:protobuf.OrderState.marginCurrency)
  if (!_internal_has_margincurrency()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return margincurrency_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderState::set_allocated_margincurrency(std::string* margincurrency) {
  if (margincurrency != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  margincurrency_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), margincurrency,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.marginCurrency)
}
inline std::string* OrderState::unsafe_arena_release_margincurrency() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderState.marginCurrency)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return margincurrency_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderState::unsafe_arena_set_allocated_margincurrency(
    std::string* margincurrency) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (margincurrency != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  margincurrency_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      margincurrency, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderState.marginCurrency)
}

// double initMarginBeforeOutsideRTH = 16;
inline bool OrderState::_internal_has_initmarginbeforeoutsiderth() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool OrderState::has_initmarginbeforeoutsiderth() const {
  return _internal_has_initmarginbeforeoutsiderth();
}
inline void OrderState::clear_initmarginbeforeoutsiderth() {
  initmarginbeforeoutsiderth_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline double OrderState::_internal_initmarginbeforeoutsiderth() const {
  return initmarginbeforeoutsiderth_;
}
inline double OrderState::initmarginbeforeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginBeforeOutsideRTH)
  return _internal_initmarginbeforeoutsiderth();
}
inline void OrderState::_internal_set_initmarginbeforeoutsiderth(double value) {
  _has_bits_[0] |= 0x00100000u;
  initmarginbeforeoutsiderth_ = value;
}
inline void OrderState::set_initmarginbeforeoutsiderth(double value) {
  _internal_set_initmarginbeforeoutsiderth(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginBeforeOutsideRTH)
}

// double maintMarginBeforeOutsideRTH = 17;
inline bool OrderState::_internal_has_maintmarginbeforeoutsiderth() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool OrderState::has_maintmarginbeforeoutsiderth() const {
  return _internal_has_maintmarginbeforeoutsiderth();
}
inline void OrderState::clear_maintmarginbeforeoutsiderth() {
  maintmarginbeforeoutsiderth_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline double OrderState::_internal_maintmarginbeforeoutsiderth() const {
  return maintmarginbeforeoutsiderth_;
}
inline double OrderState::maintmarginbeforeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginBeforeOutsideRTH)
  return _internal_maintmarginbeforeoutsiderth();
}
inline void OrderState::_internal_set_maintmarginbeforeoutsiderth(double value) {
  _has_bits_[0] |= 0x00200000u;
  maintmarginbeforeoutsiderth_ = value;
}
inline void OrderState::set_maintmarginbeforeoutsiderth(double value) {
  _internal_set_maintmarginbeforeoutsiderth(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginBeforeOutsideRTH)
}

// double equityWithLoanBeforeOutsideRTH = 18;
inline bool OrderState::_internal_has_equitywithloanbeforeoutsiderth() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool OrderState::has_equitywithloanbeforeoutsiderth() const {
  return _internal_has_equitywithloanbeforeoutsiderth();
}
inline void OrderState::clear_equitywithloanbeforeoutsiderth() {
  equitywithloanbeforeoutsiderth_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline double OrderState::_internal_equitywithloanbeforeoutsiderth() const {
  return equitywithloanbeforeoutsiderth_;
}
inline double OrderState::equitywithloanbeforeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanBeforeOutsideRTH)
  return _internal_equitywithloanbeforeoutsiderth();
}
inline void OrderState::_internal_set_equitywithloanbeforeoutsiderth(double value) {
  _has_bits_[0] |= 0x00400000u;
  equitywithloanbeforeoutsiderth_ = value;
}
inline void OrderState::set_equitywithloanbeforeoutsiderth(double value) {
  _internal_set_equitywithloanbeforeoutsiderth(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanBeforeOutsideRTH)
}

// double initMarginChangeOutsideRTH = 19;
inline bool OrderState::_internal_has_initmarginchangeoutsiderth() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool OrderState::has_initmarginchangeoutsiderth() const {
  return _internal_has_initmarginchangeoutsiderth();
}
inline void OrderState::clear_initmarginchangeoutsiderth() {
  initmarginchangeoutsiderth_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline double OrderState::_internal_initmarginchangeoutsiderth() const {
  return initmarginchangeoutsiderth_;
}
inline double OrderState::initmarginchangeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginChangeOutsideRTH)
  return _internal_initmarginchangeoutsiderth();
}
inline void OrderState::_internal_set_initmarginchangeoutsiderth(double value) {
  _has_bits_[0] |= 0x00800000u;
  initmarginchangeoutsiderth_ = value;
}
inline void OrderState::set_initmarginchangeoutsiderth(double value) {
  _internal_set_initmarginchangeoutsiderth(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginChangeOutsideRTH)
}

// double maintMarginChangeOutsideRTH = 20;
inline bool OrderState::_internal_has_maintmarginchangeoutsiderth() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool OrderState::has_maintmarginchangeoutsiderth() const {
  return _internal_has_maintmarginchangeoutsiderth();
}
inline void OrderState::clear_maintmarginchangeoutsiderth() {
  maintmarginchangeoutsiderth_ = 0;
  _has_bits_[0] &= ~0x01000000u;
}
inline double OrderState::_internal_maintmarginchangeoutsiderth() const {
  return maintmarginchangeoutsiderth_;
}
inline double OrderState::maintmarginchangeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginChangeOutsideRTH)
  return _internal_maintmarginchangeoutsiderth();
}
inline void OrderState::_internal_set_maintmarginchangeoutsiderth(double value) {
  _has_bits_[0] |= 0x01000000u;
  maintmarginchangeoutsiderth_ = value;
}
inline void OrderState::set_maintmarginchangeoutsiderth(double value) {
  _internal_set_maintmarginchangeoutsiderth(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginChangeOutsideRTH)
}

// double equityWithLoanChangeOutsideRTH = 21;
inline bool OrderState::_internal_has_equitywithloanchangeoutsiderth() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool OrderState::has_equitywithloanchangeoutsiderth() const {
  return _internal_has_equitywithloanchangeoutsiderth();
}
inline void OrderState::clear_equitywithloanchangeoutsiderth() {
  equitywithloanchangeoutsiderth_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline double OrderState::_internal_equitywithloanchangeoutsiderth() const {
  return equitywithloanchangeoutsiderth_;
}
inline double OrderState::equitywithloanchangeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanChangeOutsideRTH)
  return _internal_equitywithloanchangeoutsiderth();
}
inline void OrderState::_internal_set_equitywithloanchangeoutsiderth(double value) {
  _has_bits_[0] |= 0x02000000u;
  equitywithloanchangeoutsiderth_ = value;
}
inline void OrderState::set_equitywithloanchangeoutsiderth(double value) {
  _internal_set_equitywithloanchangeoutsiderth(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanChangeOutsideRTH)
}

// double initMarginAfterOutsideRTH = 22;
inline bool OrderState::_internal_has_initmarginafteroutsiderth() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool OrderState::has_initmarginafteroutsiderth() const {
  return _internal_has_initmarginafteroutsiderth();
}
inline void OrderState::clear_initmarginafteroutsiderth() {
  initmarginafteroutsiderth_ = 0;
  _has_bits_[0] &= ~0x04000000u;
}
inline double OrderState::_internal_initmarginafteroutsiderth() const {
  return initmarginafteroutsiderth_;
}
inline double OrderState::initmarginafteroutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginAfterOutsideRTH)
  return _internal_initmarginafteroutsiderth();
}
inline void OrderState::_internal_set_initmarginafteroutsiderth(double value) {
  _has_bits_[0] |= 0x04000000u;
  initmarginafteroutsiderth_ = value;
}
inline void OrderState::set_initmarginafteroutsiderth(double value) {
  _internal_set_initmarginafteroutsiderth(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginAfterOutsideRTH)
}

// double maintMarginAfterOutsideRTH = 23;
inline bool OrderState::_internal_has_maintmarginafteroutsiderth() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool OrderState::has_maintmarginafteroutsiderth() const {
  return _internal_has_maintmarginafteroutsiderth();
}
inline void OrderState::clear_maintmarginafteroutsiderth() {
  maintmarginafteroutsiderth_ = 0;
  _has_bits_[0] &= ~0x08000000u;
}
inline double OrderState::_internal_maintmarginafteroutsiderth() const {
  return maintmarginafteroutsiderth_;
}
inline double OrderState::maintmarginafteroutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginAfterOutsideRTH)
  return _internal_maintmarginafteroutsiderth();
}
inline void OrderState::_internal_set_maintmarginafteroutsiderth(double value) {
  _has_bits_[0] |= 0x08000000u;
  maintmarginafteroutsiderth_ = value;
}
inline void OrderState::set_maintmarginafteroutsiderth(double value) {
  _internal_set_maintmarginafteroutsiderth(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginAfterOutsideRTH)
}

// double equityWithLoanAfterOutsideRTH = 24;
inline bool OrderState::_internal_has_equitywithloanafteroutsiderth() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool OrderState::has_equitywithloanafteroutsiderth() const {
  return _internal_has_equitywithloanafteroutsiderth();
}
inline void OrderState::clear_equitywithloanafteroutsiderth() {
  equitywithloanafteroutsiderth_ = 0;
  _has_bits_[0] &= ~0x10000000u;
}
inline double OrderState::_internal_equitywithloanafteroutsiderth() const {
  return equitywithloanafteroutsiderth_;
}
inline double OrderState::equitywithloanafteroutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanAfterOutsideRTH)
  return _internal_equitywithloanafteroutsiderth();
}
inline void OrderState::_internal_set_equitywithloanafteroutsiderth(double value) {
  _has_bits_[0] |= 0x10000000u;
  equitywithloanafteroutsiderth_ = value;
}
inline void OrderState::set_equitywithloanafteroutsiderth(double value) {
  _internal_set_equitywithloanafteroutsiderth(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanAfterOutsideRTH)
}

// string suggestedSize = 25;
inline bool OrderState::_internal_has_suggestedsize() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool OrderState::has_suggestedsize() const {
  return _internal_has_suggestedsize();
}
inline void OrderState::clear_suggestedsize() {
  suggestedsize_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& OrderState::suggestedsize() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.suggestedSize)
  return _internal_suggestedsize();
}
inline void OrderState::set_suggestedsize(const std::string& value) {
  _internal_set_suggestedsize(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.suggestedSize)
}
inline std::string* OrderState::mutable_suggestedsize() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.suggestedSize)
  return _internal_mutable_suggestedsize();
}
inline const std::string& OrderState::_internal_suggestedsize() const {
  return suggestedsize_.Get();
}
inline void OrderState::_internal_set_suggestedsize(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  suggestedsize_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderState::set_suggestedsize(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  suggestedsize_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderState.suggestedSize)
}
inline void OrderState::set_suggestedsize(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  suggestedsize_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderState.suggestedSize)
}
inline void OrderState::set_suggestedsize(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  suggestedsize_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderState.suggestedSize)
}
inline std::string* OrderState::_internal_mutable_suggestedsize() {
  _has_bits_[0] |= 0x00000008u;
  return suggestedsize_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderState::release_suggestedsize() {
  // @@protoc_insertion_point(field_release:protobuf.OrderState.suggestedSize)
  if (!_internal_has_suggestedsize()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return suggestedsize_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderState::set_allocated_suggestedsize(std::string* suggestedsize) {
  if (suggestedsize != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  suggestedsize_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), suggestedsize,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.suggestedSize)
}
inline std::string* OrderState::unsafe_arena_release_suggestedsize() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderState.suggestedSize)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000008u;
  return suggestedsize_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderState::unsafe_arena_set_allocated_suggestedsize(
    std::string* suggestedsize) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (suggestedsize != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  suggestedsize_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      suggestedsize, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderState.suggestedSize)
}

// string rejectReason = 26;
inline bool OrderState::_internal_has_rejectreason() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool OrderState::has_rejectreason() const {
  return _internal_has_rejectreason();
}
inline void OrderState::clear_rejectreason() {
  rejectreason_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& OrderState::rejectreason() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.rejectReason)
  return _internal_rejectreason();
}
inline void OrderState::set_rejectreason(const std::string& value) {
  _internal_set_rejectreason(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.rejectReason)
}
inline std::string* OrderState::mutable_rejectreason() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.rejectReason)
  return _internal_mutable_rejectreason();
}
inline const std::string& OrderState::_internal_rejectreason() const {
  return rejectreason_.Get();
}
inline void OrderState::_internal_set_rejectreason(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  rejectreason_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderState::set_rejectreason(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  rejectreason_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderState.rejectReason)
}
inline void OrderState::set_rejectreason(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  rejectreason_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderState.rejectReason)
}
inline void OrderState::set_rejectreason(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  rejectreason_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderState.rejectReason)
}
inline std::string* OrderState::_internal_mutable_rejectreason() {
  _has_bits_[0] |= 0x00000010u;
  return rejectreason_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderState::release_rejectreason() {
  // @@protoc_insertion_point(field_release:protobuf.OrderState.rejectReason)
  if (!_internal_has_rejectreason()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return rejectreason_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderState::set_allocated_rejectreason(std::string* rejectreason) {
  if (rejectreason != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  rejectreason_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rejectreason,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.rejectReason)
}
inline std::string* OrderState::unsafe_arena_release_rejectreason() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderState.rejectReason)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000010u;
  return rejectreason_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderState::unsafe_arena_set_allocated_rejectreason(
    std::string* rejectreason) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (rejectreason != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  rejectreason_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      rejectreason, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderState.rejectReason)
}

// repeated .protobuf.OrderAllocation orderAllocations = 27;
inline int OrderState::_internal_orderallocations_size() const {
  return orderallocations_.size();
}
inline int OrderState::orderallocations_size() const {
  return _internal_orderallocations_size();
}
inline ::protobuf::OrderAllocation* OrderState::mutable_orderallocations(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.orderAllocations)
  return orderallocations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::OrderAllocation >*
OrderState::mutable_orderallocations() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.OrderState.orderAllocations)
  return &orderallocations_;
}
inline const ::protobuf::OrderAllocation& OrderState::_internal_orderallocations(int index) const {
  return orderallocations_.Get(index);
}
inline const ::protobuf::OrderAllocation& OrderState::orderallocations(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.orderAllocations)
  return _internal_orderallocations(index);
}
inline ::protobuf::OrderAllocation* OrderState::_internal_add_orderallocations() {
  return orderallocations_.Add();
}
inline ::protobuf::OrderAllocation* OrderState::add_orderallocations() {
  // @@protoc_insertion_point(field_add:protobuf.OrderState.orderAllocations)
  return _internal_add_orderallocations();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::OrderAllocation >&
OrderState::orderallocations() const {
  // @@protoc_insertion_point(field_list:protobuf.OrderState.orderAllocations)
  return orderallocations_;
}

// string warningText = 28;
inline bool OrderState::_internal_has_warningtext() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool OrderState::has_warningtext() const {
  return _internal_has_warningtext();
}
inline void OrderState::clear_warningtext() {
  warningtext_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& OrderState::warningtext() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.warningText)
  return _internal_warningtext();
}
inline void OrderState::set_warningtext(const std::string& value) {
  _internal_set_warningtext(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.warningText)
}
inline std::string* OrderState::mutable_warningtext() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.warningText)
  return _internal_mutable_warningtext();
}
inline const std::string& OrderState::_internal_warningtext() const {
  return warningtext_.Get();
}
inline void OrderState::_internal_set_warningtext(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  warningtext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderState::set_warningtext(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  warningtext_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderState.warningText)
}
inline void OrderState::set_warningtext(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  warningtext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderState.warningText)
}
inline void OrderState::set_warningtext(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  warningtext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderState.warningText)
}
inline std::string* OrderState::_internal_mutable_warningtext() {
  _has_bits_[0] |= 0x00000020u;
  return warningtext_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderState::release_warningtext() {
  // @@protoc_insertion_point(field_release:protobuf.OrderState.warningText)
  if (!_internal_has_warningtext()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return warningtext_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderState::set_allocated_warningtext(std::string* warningtext) {
  if (warningtext != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  warningtext_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), warningtext,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.warningText)
}
inline std::string* OrderState::unsafe_arena_release_warningtext() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderState.warningText)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000020u;
  return warningtext_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderState::unsafe_arena_set_allocated_warningtext(
    std::string* warningtext) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (warningtext != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  warningtext_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      warningtext, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderState.warningText)
}

// string completedTime = 29;
inline bool OrderState::_internal_has_completedtime() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool OrderState::has_completedtime() const {
  return _internal_has_completedtime();
}
inline void OrderState::clear_completedtime() {
  completedtime_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& OrderState::completedtime() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.completedTime)
  return _internal_completedtime();
}
inline void OrderState::set_completedtime(const std::string& value) {
  _internal_set_completedtime(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.completedTime)
}
inline std::string* OrderState::mutable_completedtime() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.completedTime)
  return _internal_mutable_completedtime();
}
inline const std::string& OrderState::_internal_completedtime() const {
  return completedtime_.Get();
}
inline void OrderState::_internal_set_completedtime(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  completedtime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderState::set_completedtime(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  completedtime_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderState.completedTime)
}
inline void OrderState::set_completedtime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  completedtime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderState.completedTime)
}
inline void OrderState::set_completedtime(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000040u;
  completedtime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderState.completedTime)
}
inline std::string* OrderState::_internal_mutable_completedtime() {
  _has_bits_[0] |= 0x00000040u;
  return completedtime_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderState::release_completedtime() {
  // @@protoc_insertion_point(field_release:protobuf.OrderState.completedTime)
  if (!_internal_has_completedtime()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return completedtime_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderState::set_allocated_completedtime(std::string* completedtime) {
  if (completedtime != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  completedtime_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), completedtime,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.completedTime)
}
inline std::string* OrderState::unsafe_arena_release_completedtime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderState.completedTime)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000040u;
  return completedtime_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderState::unsafe_arena_set_allocated_completedtime(
    std::string* completedtime) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (completedtime != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  completedtime_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      completedtime, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderState.completedTime)
}

// string completedStatus = 30;
inline bool OrderState::_internal_has_completedstatus() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool OrderState::has_completedstatus() const {
  return _internal_has_completedstatus();
}
inline void OrderState::clear_completedstatus() {
  completedstatus_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& OrderState::completedstatus() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.completedStatus)
  return _internal_completedstatus();
}
inline void OrderState::set_completedstatus(const std::string& value) {
  _internal_set_completedstatus(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderState.completedStatus)
}
inline std::string* OrderState::mutable_completedstatus() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.completedStatus)
  return _internal_mutable_completedstatus();
}
inline const std::string& OrderState::_internal_completedstatus() const {
  return completedstatus_.Get();
}
inline void OrderState::_internal_set_completedstatus(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  completedstatus_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderState::set_completedstatus(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  completedstatus_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderState.completedStatus)
}
inline void OrderState::set_completedstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  completedstatus_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderState.completedStatus)
}
inline void OrderState::set_completedstatus(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000080u;
  completedstatus_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderState.completedStatus)
}
inline std::string* OrderState::_internal_mutable_completedstatus() {
  _has_bits_[0] |= 0x00000080u;
  return completedstatus_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderState::release_completedstatus() {
  // @@protoc_insertion_point(field_release:protobuf.OrderState.completedStatus)
  if (!_internal_has_completedstatus()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return completedstatus_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderState::set_allocated_completedstatus(std::string* completedstatus) {
  if (completedstatus != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  completedstatus_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), completedstatus,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.completedStatus)
}
inline std::string* OrderState::unsafe_arena_release_completedstatus() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderState.completedStatus)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000080u;
  return completedstatus_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderState::unsafe_arena_set_allocated_completedstatus(
    std::string* completedstatus) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (completedstatus != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  completedstatus_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      completedstatus, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderState.completedStatus)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_OrderState_2eproto

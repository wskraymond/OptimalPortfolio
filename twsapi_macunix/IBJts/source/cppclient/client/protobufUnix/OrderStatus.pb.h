// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderStatus.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_OrderStatus_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_OrderStatus_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_OrderStatus_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_OrderStatus_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_OrderStatus_2eproto;
namespace protobuf {
class OrderStatus;
class OrderStatusDefaultTypeInternal;
extern OrderStatusDefaultTypeInternal _OrderStatus_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::OrderStatus* Arena::CreateMaybeMessage<::protobuf::OrderStatus>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class OrderStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.OrderStatus) */ {
 public:
  inline OrderStatus() : OrderStatus(nullptr) {};
  virtual ~OrderStatus();

  OrderStatus(const OrderStatus& from);
  OrderStatus(OrderStatus&& from) noexcept
    : OrderStatus() {
    *this = ::std::move(from);
  }

  inline OrderStatus& operator=(const OrderStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderStatus& operator=(OrderStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OrderStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderStatus* internal_default_instance() {
    return reinterpret_cast<const OrderStatus*>(
               &_OrderStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OrderStatus& a, OrderStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(OrderStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OrderStatus* New() const final {
    return CreateMaybeMessage<OrderStatus>(nullptr);
  }

  OrderStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OrderStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OrderStatus& from);
  void MergeFrom(const OrderStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.OrderStatus";
  }
  protected:
  explicit OrderStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OrderStatus_2eproto);
    return ::descriptor_table_OrderStatus_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 2,
    kFilledFieldNumber = 3,
    kRemainingFieldNumber = 4,
    kWhyHeldFieldNumber = 10,
    kOrderIdFieldNumber = 1,
    kParentIdFieldNumber = 7,
    kAvgFillPriceFieldNumber = 5,
    kPermIdFieldNumber = 6,
    kLastFillPriceFieldNumber = 8,
    kMktCapPriceFieldNumber = 11,
    kClientIdFieldNumber = 9,
  };
  // string status = 2;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const std::string& status() const;
  void set_status(const std::string& value);
  void set_status(std::string&& value);
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  std::string* mutable_status();
  std::string* release_status();
  void set_allocated_status(std::string* status);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_status();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_status(
      std::string* status);
  private:
  const std::string& _internal_status() const;
  void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // string filled = 3;
  bool has_filled() const;
  private:
  bool _internal_has_filled() const;
  public:
  void clear_filled();
  const std::string& filled() const;
  void set_filled(const std::string& value);
  void set_filled(std::string&& value);
  void set_filled(const char* value);
  void set_filled(const char* value, size_t size);
  std::string* mutable_filled();
  std::string* release_filled();
  void set_allocated_filled(std::string* filled);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_filled();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_filled(
      std::string* filled);
  private:
  const std::string& _internal_filled() const;
  void _internal_set_filled(const std::string& value);
  std::string* _internal_mutable_filled();
  public:

  // string remaining = 4;
  bool has_remaining() const;
  private:
  bool _internal_has_remaining() const;
  public:
  void clear_remaining();
  const std::string& remaining() const;
  void set_remaining(const std::string& value);
  void set_remaining(std::string&& value);
  void set_remaining(const char* value);
  void set_remaining(const char* value, size_t size);
  std::string* mutable_remaining();
  std::string* release_remaining();
  void set_allocated_remaining(std::string* remaining);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_remaining();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_remaining(
      std::string* remaining);
  private:
  const std::string& _internal_remaining() const;
  void _internal_set_remaining(const std::string& value);
  std::string* _internal_mutable_remaining();
  public:

  // string whyHeld = 10;
  bool has_whyheld() const;
  private:
  bool _internal_has_whyheld() const;
  public:
  void clear_whyheld();
  const std::string& whyheld() const;
  void set_whyheld(const std::string& value);
  void set_whyheld(std::string&& value);
  void set_whyheld(const char* value);
  void set_whyheld(const char* value, size_t size);
  std::string* mutable_whyheld();
  std::string* release_whyheld();
  void set_allocated_whyheld(std::string* whyheld);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_whyheld();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_whyheld(
      std::string* whyheld);
  private:
  const std::string& _internal_whyheld() const;
  void _internal_set_whyheld(const std::string& value);
  std::string* _internal_mutable_whyheld();
  public:

  // int32 orderId = 1;
  bool has_orderid() const;
  private:
  bool _internal_has_orderid() const;
  public:
  void clear_orderid();
  ::PROTOBUF_NAMESPACE_ID::int32 orderid() const;
  void set_orderid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_orderid() const;
  void _internal_set_orderid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 parentId = 7;
  bool has_parentid() const;
  private:
  bool _internal_has_parentid() const;
  public:
  void clear_parentid();
  ::PROTOBUF_NAMESPACE_ID::int32 parentid() const;
  void set_parentid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_parentid() const;
  void _internal_set_parentid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double avgFillPrice = 5;
  bool has_avgfillprice() const;
  private:
  bool _internal_has_avgfillprice() const;
  public:
  void clear_avgfillprice();
  double avgfillprice() const;
  void set_avgfillprice(double value);
  private:
  double _internal_avgfillprice() const;
  void _internal_set_avgfillprice(double value);
  public:

  // int64 permId = 6;
  bool has_permid() const;
  private:
  bool _internal_has_permid() const;
  public:
  void clear_permid();
  ::PROTOBUF_NAMESPACE_ID::int64 permid() const;
  void set_permid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_permid() const;
  void _internal_set_permid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // double lastFillPrice = 8;
  bool has_lastfillprice() const;
  private:
  bool _internal_has_lastfillprice() const;
  public:
  void clear_lastfillprice();
  double lastfillprice() const;
  void set_lastfillprice(double value);
  private:
  double _internal_lastfillprice() const;
  void _internal_set_lastfillprice(double value);
  public:

  // double mktCapPrice = 11;
  bool has_mktcapprice() const;
  private:
  bool _internal_has_mktcapprice() const;
  public:
  void clear_mktcapprice();
  double mktcapprice() const;
  void set_mktcapprice(double value);
  private:
  double _internal_mktcapprice() const;
  void _internal_set_mktcapprice(double value);
  public:

  // int32 clientId = 9;
  bool has_clientid() const;
  private:
  bool _internal_has_clientid() const;
  public:
  void clear_clientid();
  ::PROTOBUF_NAMESPACE_ID::int32 clientid() const;
  void set_clientid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_clientid() const;
  void _internal_set_clientid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.OrderStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filled_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr remaining_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr whyheld_;
  ::PROTOBUF_NAMESPACE_ID::int32 orderid_;
  ::PROTOBUF_NAMESPACE_ID::int32 parentid_;
  double avgfillprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 permid_;
  double lastfillprice_;
  double mktcapprice_;
  ::PROTOBUF_NAMESPACE_ID::int32 clientid_;
  friend struct ::TableStruct_OrderStatus_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OrderStatus

// int32 orderId = 1;
inline bool OrderStatus::_internal_has_orderid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool OrderStatus::has_orderid() const {
  return _internal_has_orderid();
}
inline void OrderStatus::clear_orderid() {
  orderid_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OrderStatus::_internal_orderid() const {
  return orderid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OrderStatus::orderid() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.orderId)
  return _internal_orderid();
}
inline void OrderStatus::_internal_set_orderid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  orderid_ = value;
}
inline void OrderStatus::set_orderid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_orderid(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.orderId)
}

// string status = 2;
inline bool OrderStatus::_internal_has_status() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool OrderStatus::has_status() const {
  return _internal_has_status();
}
inline void OrderStatus::clear_status() {
  status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderStatus::status() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.status)
  return _internal_status();
}
inline void OrderStatus::set_status(const std::string& value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.status)
}
inline std::string* OrderStatus::mutable_status() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderStatus.status)
  return _internal_mutable_status();
}
inline const std::string& OrderStatus::_internal_status() const {
  return status_.Get();
}
inline void OrderStatus::_internal_set_status(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderStatus::set_status(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  status_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderStatus.status)
}
inline void OrderStatus::set_status(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderStatus.status)
}
inline void OrderStatus::set_status(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderStatus.status)
}
inline std::string* OrderStatus::_internal_mutable_status() {
  _has_bits_[0] |= 0x00000001u;
  return status_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderStatus::release_status() {
  // @@protoc_insertion_point(field_release:protobuf.OrderStatus.status)
  if (!_internal_has_status()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return status_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderStatus::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderStatus.status)
}
inline std::string* OrderStatus::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderStatus.status)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return status_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderStatus::unsafe_arena_set_allocated_status(
    std::string* status) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (status != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  status_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      status, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderStatus.status)
}

// string filled = 3;
inline bool OrderStatus::_internal_has_filled() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool OrderStatus::has_filled() const {
  return _internal_has_filled();
}
inline void OrderStatus::clear_filled() {
  filled_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrderStatus::filled() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.filled)
  return _internal_filled();
}
inline void OrderStatus::set_filled(const std::string& value) {
  _internal_set_filled(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.filled)
}
inline std::string* OrderStatus::mutable_filled() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderStatus.filled)
  return _internal_mutable_filled();
}
inline const std::string& OrderStatus::_internal_filled() const {
  return filled_.Get();
}
inline void OrderStatus::_internal_set_filled(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  filled_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderStatus::set_filled(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  filled_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderStatus.filled)
}
inline void OrderStatus::set_filled(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  filled_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderStatus.filled)
}
inline void OrderStatus::set_filled(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  filled_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderStatus.filled)
}
inline std::string* OrderStatus::_internal_mutable_filled() {
  _has_bits_[0] |= 0x00000002u;
  return filled_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderStatus::release_filled() {
  // @@protoc_insertion_point(field_release:protobuf.OrderStatus.filled)
  if (!_internal_has_filled()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return filled_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderStatus::set_allocated_filled(std::string* filled) {
  if (filled != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  filled_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filled,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderStatus.filled)
}
inline std::string* OrderStatus::unsafe_arena_release_filled() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderStatus.filled)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return filled_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderStatus::unsafe_arena_set_allocated_filled(
    std::string* filled) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (filled != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  filled_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      filled, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderStatus.filled)
}

// string remaining = 4;
inline bool OrderStatus::_internal_has_remaining() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool OrderStatus::has_remaining() const {
  return _internal_has_remaining();
}
inline void OrderStatus::clear_remaining() {
  remaining_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& OrderStatus::remaining() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.remaining)
  return _internal_remaining();
}
inline void OrderStatus::set_remaining(const std::string& value) {
  _internal_set_remaining(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.remaining)
}
inline std::string* OrderStatus::mutable_remaining() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderStatus.remaining)
  return _internal_mutable_remaining();
}
inline const std::string& OrderStatus::_internal_remaining() const {
  return remaining_.Get();
}
inline void OrderStatus::_internal_set_remaining(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  remaining_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderStatus::set_remaining(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  remaining_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderStatus.remaining)
}
inline void OrderStatus::set_remaining(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  remaining_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderStatus.remaining)
}
inline void OrderStatus::set_remaining(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  remaining_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderStatus.remaining)
}
inline std::string* OrderStatus::_internal_mutable_remaining() {
  _has_bits_[0] |= 0x00000004u;
  return remaining_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderStatus::release_remaining() {
  // @@protoc_insertion_point(field_release:protobuf.OrderStatus.remaining)
  if (!_internal_has_remaining()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return remaining_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderStatus::set_allocated_remaining(std::string* remaining) {
  if (remaining != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  remaining_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), remaining,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderStatus.remaining)
}
inline std::string* OrderStatus::unsafe_arena_release_remaining() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderStatus.remaining)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return remaining_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderStatus::unsafe_arena_set_allocated_remaining(
    std::string* remaining) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (remaining != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  remaining_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      remaining, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderStatus.remaining)
}

// double avgFillPrice = 5;
inline bool OrderStatus::_internal_has_avgfillprice() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool OrderStatus::has_avgfillprice() const {
  return _internal_has_avgfillprice();
}
inline void OrderStatus::clear_avgfillprice() {
  avgfillprice_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline double OrderStatus::_internal_avgfillprice() const {
  return avgfillprice_;
}
inline double OrderStatus::avgfillprice() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.avgFillPrice)
  return _internal_avgfillprice();
}
inline void OrderStatus::_internal_set_avgfillprice(double value) {
  _has_bits_[0] |= 0x00000040u;
  avgfillprice_ = value;
}
inline void OrderStatus::set_avgfillprice(double value) {
  _internal_set_avgfillprice(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.avgFillPrice)
}

// int64 permId = 6;
inline bool OrderStatus::_internal_has_permid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool OrderStatus::has_permid() const {
  return _internal_has_permid();
}
inline void OrderStatus::clear_permid() {
  permid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 OrderStatus::_internal_permid() const {
  return permid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 OrderStatus::permid() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.permId)
  return _internal_permid();
}
inline void OrderStatus::_internal_set_permid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  permid_ = value;
}
inline void OrderStatus::set_permid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_permid(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.permId)
}

// int32 parentId = 7;
inline bool OrderStatus::_internal_has_parentid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool OrderStatus::has_parentid() const {
  return _internal_has_parentid();
}
inline void OrderStatus::clear_parentid() {
  parentid_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OrderStatus::_internal_parentid() const {
  return parentid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OrderStatus::parentid() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.parentId)
  return _internal_parentid();
}
inline void OrderStatus::_internal_set_parentid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  parentid_ = value;
}
inline void OrderStatus::set_parentid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_parentid(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.parentId)
}

// double lastFillPrice = 8;
inline bool OrderStatus::_internal_has_lastfillprice() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool OrderStatus::has_lastfillprice() const {
  return _internal_has_lastfillprice();
}
inline void OrderStatus::clear_lastfillprice() {
  lastfillprice_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double OrderStatus::_internal_lastfillprice() const {
  return lastfillprice_;
}
inline double OrderStatus::lastfillprice() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.lastFillPrice)
  return _internal_lastfillprice();
}
inline void OrderStatus::_internal_set_lastfillprice(double value) {
  _has_bits_[0] |= 0x00000100u;
  lastfillprice_ = value;
}
inline void OrderStatus::set_lastfillprice(double value) {
  _internal_set_lastfillprice(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.lastFillPrice)
}

// int32 clientId = 9;
inline bool OrderStatus::_internal_has_clientid() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool OrderStatus::has_clientid() const {
  return _internal_has_clientid();
}
inline void OrderStatus::clear_clientid() {
  clientid_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OrderStatus::_internal_clientid() const {
  return clientid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OrderStatus::clientid() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.clientId)
  return _internal_clientid();
}
inline void OrderStatus::_internal_set_clientid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  clientid_ = value;
}
inline void OrderStatus::set_clientid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_clientid(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.clientId)
}

// string whyHeld = 10;
inline bool OrderStatus::_internal_has_whyheld() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool OrderStatus::has_whyheld() const {
  return _internal_has_whyheld();
}
inline void OrderStatus::clear_whyheld() {
  whyheld_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& OrderStatus::whyheld() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.whyHeld)
  return _internal_whyheld();
}
inline void OrderStatus::set_whyheld(const std::string& value) {
  _internal_set_whyheld(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.whyHeld)
}
inline std::string* OrderStatus::mutable_whyheld() {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderStatus.whyHeld)
  return _internal_mutable_whyheld();
}
inline const std::string& OrderStatus::_internal_whyheld() const {
  return whyheld_.Get();
}
inline void OrderStatus::_internal_set_whyheld(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  whyheld_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void OrderStatus::set_whyheld(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  whyheld_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:protobuf.OrderStatus.whyHeld)
}
inline void OrderStatus::set_whyheld(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  whyheld_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:protobuf.OrderStatus.whyHeld)
}
inline void OrderStatus::set_whyheld(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  whyheld_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:protobuf.OrderStatus.whyHeld)
}
inline std::string* OrderStatus::_internal_mutable_whyheld() {
  _has_bits_[0] |= 0x00000008u;
  return whyheld_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* OrderStatus::release_whyheld() {
  // @@protoc_insertion_point(field_release:protobuf.OrderStatus.whyHeld)
  if (!_internal_has_whyheld()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return whyheld_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OrderStatus::set_allocated_whyheld(std::string* whyheld) {
  if (whyheld != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  whyheld_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), whyheld,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderStatus.whyHeld)
}
inline std::string* OrderStatus::unsafe_arena_release_whyheld() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.OrderStatus.whyHeld)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000008u;
  return whyheld_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void OrderStatus::unsafe_arena_set_allocated_whyheld(
    std::string* whyheld) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (whyheld != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  whyheld_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      whyheld, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.OrderStatus.whyHeld)
}

// double mktCapPrice = 11;
inline bool OrderStatus::_internal_has_mktcapprice() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool OrderStatus::has_mktcapprice() const {
  return _internal_has_mktcapprice();
}
inline void OrderStatus::clear_mktcapprice() {
  mktcapprice_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double OrderStatus::_internal_mktcapprice() const {
  return mktcapprice_;
}
inline double OrderStatus::mktcapprice() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.mktCapPrice)
  return _internal_mktcapprice();
}
inline void OrderStatus::_internal_set_mktcapprice(double value) {
  _has_bits_[0] |= 0x00000200u;
  mktcapprice_ = value;
}
inline void OrderStatus::set_mktcapprice(double value) {
  _internal_set_mktcapprice(value);
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.mktCapPrice)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_OrderStatus_2eproto
